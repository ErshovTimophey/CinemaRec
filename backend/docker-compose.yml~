services:
  postgres:
    container_name: postgres
    image: postgres:13
    environment:
      POSTGRES_USER: tim
      POSTGRES_PASSWORD: tim
      POSTGRES_DB: auth_db
      PGDATA: /var/lib/postgresql/data/inf
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/data/postgres/inf
    networks:
      - app_network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    networks:
      - app_network
    volumes:
      - pgadmin:/var/lib/pgadmin/inf
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    restart: unless-stopped

  localstack:
    image: localstack/localstack:3.8.1
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,server
      - DEFAULT_REGION=us-east-1
      - HOSTNAME_EXTERNAL=localhost
      - DEBUG=1
      - START_WEB=1
    volumes:
      - localstack_data:/var/lib/localstack
      - ./localstack/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh
    networks:
      - app_network

# добавить, для залива на сервер
#  authservice:
#    image: auth-service:latest
#    container_name: auth-service
#    environment:
#      - REDIS_URL=redis://redis:6379
#    depends_on:
#      - redis
#    restart: unless-stopped
volumes:
  postgres_data:
  pgadmin:
  redis_data:
  localstack_data:

networks:
  app_network:
    driver: bridge